name: CI/CD

on: 
  push:
  workflow_dispatch:  # Ajout pour déclencher manuellement le workflow

jobs:
  sast_scan:
    name: Run Bandit Scan
    runs-on: self-hosted

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install Bandit
      run: pip install bandit

    - name: Run Bandit Scan
      run: bandit -ll -ii -r . -f json -o bandit-report.json
      continue-on-error: true

    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: bandit-findings
        path: bandit-report.json

  image_scan:
    name: Build Image and Run Image Scan
    runs-on: self-hosted

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker
      uses: docker-practice/actions-setup-docker@v1
      with:
        docker_version: '20.10.7'

    - name: Build Docker Image
      run: docker build -f Dockerfile -t myappdevsecops:latest .

    - name: Set HTTP Client Timeout
      run: echo "ACTIONS_HTTP_TIMEOUT=3000" >> $GITHUB_ENV  # Ajustez le délai selon vos besoins

    - name: Docker Scout Scan
      uses: docker/scout-action@v1.0.9  # Utilisez une version stable
      with:
        dockerhub-user: ${{ secrets.REPO_USER }}
        dockerhub-password: ${{ secrets.REPO_PWD }}
        command: quickview,cves
        only-severities: critical,high
        sarif-file: scout-report.sarif
        continue-on-error: true

    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: docker-scout-findings
        path: scout-report.sarif

  push_and_deploy:
    name: Push and Deploy
    runs-on: self-hosted
    needs: image_scan

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Log in to Docker Hub
      run: echo ${{ secrets.REPO_PWD }} | docker login -u ${{ secrets.REPO_USER }} --password-stdin

    - name: Push Docker Image
      run: docker push myappdevsecops:latest

    - name: Deploy Locally
      run: |
        docker pull myappdevsecops:latest
        docker stop myapp || true
        docker rm myapp || true
        docker run -d --name myapp -p 8000:8000 myappdevsecops:latest
